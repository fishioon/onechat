// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package chat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthType int32

const (
	AuthType_NAME_PWD   AuthType = 0
	AuthType_EMAIL_PWD  AuthType = 1
	AuthType_PHONE_PWD  AuthType = 2
	AuthType_PHONE_CODE AuthType = 3
)

var AuthType_name = map[int32]string{
	0: "NAME_PWD",
	1: "EMAIL_PWD",
	2: "PHONE_PWD",
	3: "PHONE_CODE",
}
var AuthType_value = map[string]int32{
	"NAME_PWD":   0,
	"EMAIL_PWD":  1,
	"PHONE_PWD":  2,
	"PHONE_CODE": 3,
}

func (x AuthType) String() string {
	return proto.EnumName(AuthType_name, int32(x))
}
func (AuthType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chat_b91747d94ff89f68, []int{0}
}

type ContentType int32

const (
	ContentType_TEXT  ContentType = 0
	ContentType_IMAGE ContentType = 1
)

var ContentType_name = map[int32]string{
	0: "TEXT",
	1: "IMAGE",
}
var ContentType_value = map[string]int32{
	"TEXT":  0,
	"IMAGE": 1,
}

func (x ContentType) String() string {
	return proto.EnumName(ContentType_name, int32(x))
}
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chat_b91747d94ff89f68, []int{1}
}

type ConnReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnReq) Reset()         { *m = ConnReq{} }
func (m *ConnReq) String() string { return proto.CompactTextString(m) }
func (*ConnReq) ProtoMessage()    {}
func (*ConnReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_b91747d94ff89f68, []int{0}
}
func (m *ConnReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnReq.Unmarshal(m, b)
}
func (m *ConnReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnReq.Marshal(b, m, deterministic)
}
func (dst *ConnReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnReq.Merge(dst, src)
}
func (m *ConnReq) XXX_Size() int {
	return xxx_messageInfo_ConnReq.Size(m)
}
func (m *ConnReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnReq.DiscardUnknown(m)
}

var xxx_messageInfo_ConnReq proto.InternalMessageInfo

type ConnRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnRsp) Reset()         { *m = ConnRsp{} }
func (m *ConnRsp) String() string { return proto.CompactTextString(m) }
func (*ConnRsp) ProtoMessage()    {}
func (*ConnRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_b91747d94ff89f68, []int{1}
}
func (m *ConnRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnRsp.Unmarshal(m, b)
}
func (m *ConnRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnRsp.Marshal(b, m, deterministic)
}
func (dst *ConnRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnRsp.Merge(dst, src)
}
func (m *ConnRsp) XXX_Size() int {
	return xxx_messageInfo_ConnRsp.Size(m)
}
func (m *ConnRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ConnRsp proto.InternalMessageInfo

type GroupReq struct {
	Gid                  string   `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupReq) Reset()         { *m = GroupReq{} }
func (m *GroupReq) String() string { return proto.CompactTextString(m) }
func (*GroupReq) ProtoMessage()    {}
func (*GroupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_b91747d94ff89f68, []int{2}
}
func (m *GroupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupReq.Unmarshal(m, b)
}
func (m *GroupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupReq.Marshal(b, m, deterministic)
}
func (dst *GroupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupReq.Merge(dst, src)
}
func (m *GroupReq) XXX_Size() int {
	return xxx_messageInfo_GroupReq.Size(m)
}
func (m *GroupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupReq.DiscardUnknown(m)
}

var xxx_messageInfo_GroupReq proto.InternalMessageInfo

func (m *GroupReq) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

type GroupRsp struct {
	Gid                  uint64   `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupRsp) Reset()         { *m = GroupRsp{} }
func (m *GroupRsp) String() string { return proto.CompactTextString(m) }
func (*GroupRsp) ProtoMessage()    {}
func (*GroupRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_b91747d94ff89f68, []int{3}
}
func (m *GroupRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupRsp.Unmarshal(m, b)
}
func (m *GroupRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupRsp.Marshal(b, m, deterministic)
}
func (dst *GroupRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupRsp.Merge(dst, src)
}
func (m *GroupRsp) XXX_Size() int {
	return xxx_messageInfo_GroupRsp.Size(m)
}
func (m *GroupRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GroupRsp proto.InternalMessageInfo

func (m *GroupRsp) GetGid() uint64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type PubReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubReq) Reset()         { *m = PubReq{} }
func (m *PubReq) String() string { return proto.CompactTextString(m) }
func (*PubReq) ProtoMessage()    {}
func (*PubReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_b91747d94ff89f68, []int{4}
}
func (m *PubReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubReq.Unmarshal(m, b)
}
func (m *PubReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubReq.Marshal(b, m, deterministic)
}
func (dst *PubReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubReq.Merge(dst, src)
}
func (m *PubReq) XXX_Size() int {
	return xxx_messageInfo_PubReq.Size(m)
}
func (m *PubReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PubReq.DiscardUnknown(m)
}

var xxx_messageInfo_PubReq proto.InternalMessageInfo

type PubRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubRsp) Reset()         { *m = PubRsp{} }
func (m *PubRsp) String() string { return proto.CompactTextString(m) }
func (*PubRsp) ProtoMessage()    {}
func (*PubRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_b91747d94ff89f68, []int{5}
}
func (m *PubRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubRsp.Unmarshal(m, b)
}
func (m *PubRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubRsp.Marshal(b, m, deterministic)
}
func (dst *PubRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubRsp.Merge(dst, src)
}
func (m *PubRsp) XXX_Size() int {
	return xxx_messageInfo_PubRsp.Size(m)
}
func (m *PubRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_PubRsp.DiscardUnknown(m)
}

var xxx_messageInfo_PubRsp proto.InternalMessageInfo

type Msg struct {
	MsgType              uint64      `protobuf:"varint,1,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`
	MsgId                uint64      `protobuf:"varint,2,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	FromId               uint64      `protobuf:"varint,3,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	ToId                 uint64      `protobuf:"varint,4,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
	ContentType          ContentType `protobuf:"varint,5,opt,name=content_type,json=contentType,proto3,enum=chat.ContentType" json:"content_type,omitempty"`
	Content              string      `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Name                 string      `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Msg) Reset()         { *m = Msg{} }
func (m *Msg) String() string { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()    {}
func (*Msg) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_b91747d94ff89f68, []int{6}
}
func (m *Msg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg.Unmarshal(m, b)
}
func (m *Msg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg.Marshal(b, m, deterministic)
}
func (dst *Msg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg.Merge(dst, src)
}
func (m *Msg) XXX_Size() int {
	return xxx_messageInfo_Msg.Size(m)
}
func (m *Msg) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg.DiscardUnknown(m)
}

var xxx_messageInfo_Msg proto.InternalMessageInfo

func (m *Msg) GetMsgType() uint64 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *Msg) GetMsgId() uint64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *Msg) GetFromId() uint64 {
	if m != nil {
		return m.FromId
	}
	return 0
}

func (m *Msg) GetToId() uint64 {
	if m != nil {
		return m.ToId
	}
	return 0
}

func (m *Msg) GetContentType() ContentType {
	if m != nil {
		return m.ContentType
	}
	return ContentType_TEXT
}

func (m *Msg) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Msg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*ConnReq)(nil), "chat.ConnReq")
	proto.RegisterType((*ConnRsp)(nil), "chat.ConnRsp")
	proto.RegisterType((*GroupReq)(nil), "chat.GroupReq")
	proto.RegisterType((*GroupRsp)(nil), "chat.GroupRsp")
	proto.RegisterType((*PubReq)(nil), "chat.PubReq")
	proto.RegisterType((*PubRsp)(nil), "chat.PubRsp")
	proto.RegisterType((*Msg)(nil), "chat.Msg")
	proto.RegisterEnum("chat.AuthType", AuthType_name, AuthType_value)
	proto.RegisterEnum("chat.ContentType", ContentType_name, ContentType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	Conn(ctx context.Context, in *ConnReq, opts ...grpc.CallOption) (Chat_ConnClient, error)
	Pub(ctx context.Context, in *PubReq, opts ...grpc.CallOption) (*PubRsp, error)
	Group(ctx context.Context, in *GroupReq, opts ...grpc.CallOption) (*GroupRsp, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) Conn(ctx context.Context, in *ConnReq, opts ...grpc.CallOption) (Chat_ConnClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/chat.Chat/Conn", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatConnClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_ConnClient interface {
	Recv() (*Msg, error)
	grpc.ClientStream
}

type chatConnClient struct {
	grpc.ClientStream
}

func (x *chatConnClient) Recv() (*Msg, error) {
	m := new(Msg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) Pub(ctx context.Context, in *PubReq, opts ...grpc.CallOption) (*PubRsp, error) {
	out := new(PubRsp)
	err := c.cc.Invoke(ctx, "/chat.Chat/Pub", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Group(ctx context.Context, in *GroupReq, opts ...grpc.CallOption) (*GroupRsp, error) {
	out := new(GroupRsp)
	err := c.cc.Invoke(ctx, "/chat.Chat/Group", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	Conn(*ConnReq, Chat_ConnServer) error
	Pub(context.Context, *PubReq) (*PubRsp, error)
	Group(context.Context, *GroupReq) (*GroupRsp, error)
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_Conn_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConnReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).Conn(m, &chatConnServer{stream})
}

type Chat_ConnServer interface {
	Send(*Msg) error
	grpc.ServerStream
}

type chatConnServer struct {
	grpc.ServerStream
}

func (x *chatConnServer) Send(m *Msg) error {
	return x.ServerStream.SendMsg(m)
}

func _Chat_Pub_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PubReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Pub(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/Pub",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Pub(ctx, req.(*PubReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Group_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Group(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/Group",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Group(ctx, req.(*GroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Pub",
			Handler:    _Chat_Pub_Handler,
		},
		{
			MethodName: "Group",
			Handler:    _Chat_Group_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Conn",
			Handler:       _Chat_Conn_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chat.proto",
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_chat_b91747d94ff89f68) }

var fileDescriptor_chat_b91747d94ff89f68 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0x4f, 0xaf, 0x9a, 0x40,
	0x14, 0xc5, 0x1f, 0x8f, 0xe1, 0xdf, 0x7d, 0x3e, 0x43, 0x6f, 0xd3, 0x94, 0x9a, 0x2e, 0x5e, 0xd9,
	0xd4, 0xb8, 0x30, 0x8d, 0xed, 0x17, 0x20, 0x48, 0x2d, 0x49, 0x51, 0x42, 0x4c, 0xda, 0x9d, 0x51,
	0xa1, 0xe8, 0x02, 0x66, 0x74, 0x86, 0x26, 0x7e, 0xc4, 0x7e, 0xab, 0x66, 0x66, 0xfc, 0xf7, 0x76,
	0xe7, 0x77, 0x4e, 0x2e, 0x97, 0x9b, 0x33, 0x00, 0xdb, 0xdd, 0x5a, 0x8c, 0xd9, 0x91, 0x0a, 0x8a,
	0x44, 0xea, 0xd0, 0x03, 0x27, 0xa6, 0x6d, 0x5b, 0x54, 0x87, 0xab, 0xe4, 0x2c, 0xfc, 0x08, 0xee,
	0xec, 0x48, 0x3b, 0x56, 0x54, 0x07, 0xf4, 0xc1, 0xac, 0xf7, 0x65, 0x60, 0xbc, 0x18, 0x43, 0xaf,
	0x90, 0xf2, 0x96, 0x72, 0x76, 0x9f, 0x12, 0x9d, 0xba, 0x60, 0xe7, 0xdd, 0x46, 0x7e, 0xf0, 0xac,
	0x38, 0x0b, 0xff, 0x19, 0x60, 0x66, 0xbc, 0xc6, 0x0f, 0xe0, 0x36, 0xbc, 0x5e, 0x89, 0x13, 0xab,
	0xce, 0x23, 0x4e, 0xc3, 0xeb, 0xe5, 0x89, 0x55, 0xf8, 0x0e, 0x6c, 0x19, 0xed, 0xcb, 0xe0, 0x51,
	0x05, 0x56, 0xc3, 0xeb, 0xb4, 0xc4, 0xf7, 0xe0, 0xfc, 0x39, 0xd2, 0x46, 0xfa, 0xa6, 0xf2, 0x6d,
	0x89, 0x69, 0x89, 0x6f, 0xc1, 0x12, 0x54, 0xda, 0x44, 0xd9, 0x44, 0xd0, 0xb4, 0xc4, 0x6f, 0xd0,
	0xdb, 0xd2, 0x56, 0x54, 0xad, 0xd0, 0x3b, 0xac, 0x17, 0x63, 0xd8, 0x9f, 0xbc, 0x19, 0xab, 0xb3,
	0x63, 0x9d, 0xc8, 0x6d, 0xc5, 0xd3, 0xf6, 0x06, 0x18, 0x80, 0x73, 0xc6, 0xc0, 0x56, 0x57, 0x5e,
	0x10, 0x11, 0x48, 0xbb, 0x6e, 0xaa, 0xc0, 0x51, 0xb6, 0xd2, 0xa3, 0xef, 0xe0, 0x46, 0x9d, 0xd8,
	0xa9, 0xc9, 0x1e, 0xb8, 0xf3, 0x28, 0x4b, 0x56, 0xf9, 0xaf, 0xa9, 0xff, 0x80, 0xcf, 0xe0, 0x25,
	0x59, 0x94, 0xfe, 0x54, 0x68, 0x48, 0xcc, 0x7f, 0x2c, 0xe6, 0x3a, 0x7d, 0xc4, 0x3e, 0x80, 0xc6,
	0x78, 0x31, 0x4d, 0x7c, 0x73, 0x14, 0xc2, 0xd3, 0xdd, 0x1f, 0xa1, 0x0b, 0x64, 0x99, 0xfc, 0x5e,
	0xfa, 0x0f, 0xe8, 0x81, 0x95, 0x66, 0xd1, 0x2c, 0xf1, 0x8d, 0xc9, 0x5f, 0x20, 0xf1, 0x6e, 0x2d,
	0x30, 0x04, 0x22, 0xab, 0xc1, 0xe7, 0xeb, 0x25, 0xb2, 0xb1, 0x81, 0xa7, 0x31, 0xe3, 0xf5, 0x17,
	0x03, 0x3f, 0x81, 0x99, 0x77, 0x1b, 0xec, 0x69, 0x4f, 0x57, 0x30, 0xb8, 0x23, 0xce, 0xf0, 0x33,
	0x58, 0xaa, 0x38, 0xec, 0x6b, 0xfb, 0xd2, 0xf1, 0xe0, 0x15, 0x73, 0xb6, 0xb1, 0xd5, 0x13, 0xf9,
	0xfa, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x87, 0xb6, 0x9a, 0x3f, 0x30, 0x02, 0x00, 0x00,
}
