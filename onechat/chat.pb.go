// Code generated by protoc-gen-go. DO NOT EDIT.
// source: onechat/chat.proto

package onechat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConnReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnReq) Reset()         { *m = ConnReq{} }
func (m *ConnReq) String() string { return proto.CompactTextString(m) }
func (*ConnReq) ProtoMessage()    {}
func (*ConnReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_62b3ac6270a55ca8, []int{0}
}
func (m *ConnReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnReq.Unmarshal(m, b)
}
func (m *ConnReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnReq.Marshal(b, m, deterministic)
}
func (dst *ConnReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnReq.Merge(dst, src)
}
func (m *ConnReq) XXX_Size() int {
	return xxx_messageInfo_ConnReq.Size(m)
}
func (m *ConnReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnReq.DiscardUnknown(m)
}

var xxx_messageInfo_ConnReq proto.InternalMessageInfo

type GroupReq struct {
	Gid                  string   `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupReq) Reset()         { *m = GroupReq{} }
func (m *GroupReq) String() string { return proto.CompactTextString(m) }
func (*GroupReq) ProtoMessage()    {}
func (*GroupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_62b3ac6270a55ca8, []int{1}
}
func (m *GroupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupReq.Unmarshal(m, b)
}
func (m *GroupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupReq.Marshal(b, m, deterministic)
}
func (dst *GroupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupReq.Merge(dst, src)
}
func (m *GroupReq) XXX_Size() int {
	return xxx_messageInfo_GroupReq.Size(m)
}
func (m *GroupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupReq.DiscardUnknown(m)
}

var xxx_messageInfo_GroupReq proto.InternalMessageInfo

func (m *GroupReq) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

type GroupRsp struct {
	Gid                  string   `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupRsp) Reset()         { *m = GroupRsp{} }
func (m *GroupRsp) String() string { return proto.CompactTextString(m) }
func (*GroupRsp) ProtoMessage()    {}
func (*GroupRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_62b3ac6270a55ca8, []int{2}
}
func (m *GroupRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupRsp.Unmarshal(m, b)
}
func (m *GroupRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupRsp.Marshal(b, m, deterministic)
}
func (dst *GroupRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupRsp.Merge(dst, src)
}
func (m *GroupRsp) XXX_Size() int {
	return xxx_messageInfo_GroupRsp.Size(m)
}
func (m *GroupRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GroupRsp proto.InternalMessageInfo

func (m *GroupRsp) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

type PubMsgReq struct {
	Msg                  *Msg     `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubMsgReq) Reset()         { *m = PubMsgReq{} }
func (m *PubMsgReq) String() string { return proto.CompactTextString(m) }
func (*PubMsgReq) ProtoMessage()    {}
func (*PubMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_62b3ac6270a55ca8, []int{3}
}
func (m *PubMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubMsgReq.Unmarshal(m, b)
}
func (m *PubMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubMsgReq.Marshal(b, m, deterministic)
}
func (dst *PubMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubMsgReq.Merge(dst, src)
}
func (m *PubMsgReq) XXX_Size() int {
	return xxx_messageInfo_PubMsgReq.Size(m)
}
func (m *PubMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PubMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_PubMsgReq proto.InternalMessageInfo

func (m *PubMsgReq) GetMsg() *Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

type PubMsgRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubMsgRsp) Reset()         { *m = PubMsgRsp{} }
func (m *PubMsgRsp) String() string { return proto.CompactTextString(m) }
func (*PubMsgRsp) ProtoMessage()    {}
func (*PubMsgRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_62b3ac6270a55ca8, []int{4}
}
func (m *PubMsgRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubMsgRsp.Unmarshal(m, b)
}
func (m *PubMsgRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubMsgRsp.Marshal(b, m, deterministic)
}
func (dst *PubMsgRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubMsgRsp.Merge(dst, src)
}
func (m *PubMsgRsp) XXX_Size() int {
	return xxx_messageInfo_PubMsgRsp.Size(m)
}
func (m *PubMsgRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_PubMsgRsp.DiscardUnknown(m)
}

var xxx_messageInfo_PubMsgRsp proto.InternalMessageInfo

type Msg struct {
	MsgId                string   `protobuf:"bytes,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	FromId               string   `protobuf:"bytes,2,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	ToId                 string   `protobuf:"bytes,3,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
	Content              string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Msg) Reset()         { *m = Msg{} }
func (m *Msg) String() string { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()    {}
func (*Msg) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_62b3ac6270a55ca8, []int{5}
}
func (m *Msg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg.Unmarshal(m, b)
}
func (m *Msg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg.Marshal(b, m, deterministic)
}
func (dst *Msg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg.Merge(dst, src)
}
func (m *Msg) XXX_Size() int {
	return xxx_messageInfo_Msg.Size(m)
}
func (m *Msg) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg.DiscardUnknown(m)
}

var xxx_messageInfo_Msg proto.InternalMessageInfo

func (m *Msg) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *Msg) GetFromId() string {
	if m != nil {
		return m.FromId
	}
	return ""
}

func (m *Msg) GetToId() string {
	if m != nil {
		return m.ToId
	}
	return ""
}

func (m *Msg) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*ConnReq)(nil), "onechat.ConnReq")
	proto.RegisterType((*GroupReq)(nil), "onechat.GroupReq")
	proto.RegisterType((*GroupRsp)(nil), "onechat.GroupRsp")
	proto.RegisterType((*PubMsgReq)(nil), "onechat.PubMsgReq")
	proto.RegisterType((*PubMsgRsp)(nil), "onechat.PubMsgRsp")
	proto.RegisterType((*Msg)(nil), "onechat.Msg")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	Conn(ctx context.Context, in *ConnReq, opts ...grpc.CallOption) (Chat_ConnClient, error)
	Pub(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*PubMsgRsp, error)
	GroupAction(ctx context.Context, in *GroupReq, opts ...grpc.CallOption) (*GroupRsp, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) Conn(ctx context.Context, in *ConnReq, opts ...grpc.CallOption) (Chat_ConnClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/onechat.Chat/Conn", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatConnClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_ConnClient interface {
	Recv() (*Msg, error)
	grpc.ClientStream
}

type chatConnClient struct {
	grpc.ClientStream
}

func (x *chatConnClient) Recv() (*Msg, error) {
	m := new(Msg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) Pub(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*PubMsgRsp, error) {
	out := new(PubMsgRsp)
	err := c.cc.Invoke(ctx, "/onechat.Chat/Pub", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GroupAction(ctx context.Context, in *GroupReq, opts ...grpc.CallOption) (*GroupRsp, error) {
	out := new(GroupRsp)
	err := c.cc.Invoke(ctx, "/onechat.Chat/GroupAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	Conn(*ConnReq, Chat_ConnServer) error
	Pub(context.Context, *Msg) (*PubMsgRsp, error)
	GroupAction(context.Context, *GroupReq) (*GroupRsp, error)
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_Conn_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConnReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).Conn(m, &chatConnServer{stream})
}

type Chat_ConnServer interface {
	Send(*Msg) error
	grpc.ServerStream
}

type chatConnServer struct {
	grpc.ServerStream
}

func (x *chatConnServer) Send(m *Msg) error {
	return x.ServerStream.SendMsg(m)
}

func _Chat_Pub_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Msg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Pub(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onechat.Chat/Pub",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Pub(ctx, req.(*Msg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GroupAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GroupAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onechat.Chat/GroupAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GroupAction(ctx, req.(*GroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "onechat.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Pub",
			Handler:    _Chat_Pub_Handler,
		},
		{
			MethodName: "GroupAction",
			Handler:    _Chat_GroupAction_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Conn",
			Handler:       _Chat_Conn_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "onechat/chat.proto",
}

func init() { proto.RegisterFile("onechat/chat.proto", fileDescriptor_chat_62b3ac6270a55ca8) }

var fileDescriptor_chat_62b3ac6270a55ca8 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0xa9, 0xe9, 0x5a, 0x7b, 0xea, 0xc5, 0x3c, 0x22, 0x96, 0x22, 0x22, 0xbd, 0x71, 0x20,
	0x54, 0xd9, 0x9e, 0x40, 0x76, 0x21, 0xbd, 0x18, 0x8c, 0xbe, 0x80, 0xac, 0x4d, 0xcd, 0x76, 0xd1,
	0x9c, 0xac, 0x49, 0x5f, 0xc3, 0x67, 0x96, 0x84, 0x2e, 0x32, 0xd9, 0x4d, 0xc8, 0xff, 0xfd, 0x27,
	0xc9, 0xf9, 0x4f, 0x00, 0x49, 0x76, 0xed, 0x7e, 0x67, 0xde, 0xec, 0x52, 0xaa, 0x81, 0x0c, 0x61,
	0x3c, 0xb1, 0x22, 0x81, 0x78, 0x4d, 0x52, 0xd6, 0xdd, 0xb1, 0x78, 0x84, 0xeb, 0xcf, 0x81, 0x46,
	0x55, 0x77, 0x47, 0x9c, 0x03, 0x13, 0x07, 0x9e, 0x05, 0xcf, 0xc1, 0x22, 0xa9, 0xed, 0xf6, 0xcf,
	0xd5, 0xea, 0x82, 0xfb, 0x0a, 0xc9, 0x76, 0x6c, 0x36, 0x5a, 0xd8, 0xc3, 0x4f, 0xc0, 0x7a, 0x2d,
	0x9c, 0x9d, 0x2e, 0x6f, 0xca, 0xe9, 0xa9, 0xd2, 0xba, 0xd6, 0x28, 0x52, 0x5f, 0xac, 0x55, 0xc1,
	0x81, 0x6d, 0xb4, 0xc0, 0x7b, 0x88, 0x7a, 0x2d, 0xbe, 0xfc, 0xad, 0xb3, 0x5e, 0x8b, 0x8a, 0xe3,
	0x03, 0xc4, 0xdf, 0x03, 0xf5, 0x96, 0x5f, 0x39, 0x1e, 0x59, 0x59, 0x71, 0xbc, 0x83, 0x99, 0x21,
	0x8b, 0x99, 0xc3, 0xa1, 0xa1, 0x8a, 0x63, 0x06, 0x71, 0x4b, 0xd2, 0x74, 0xd2, 0x64, 0xa1, 0xc3,
	0x27, 0xb9, 0xfc, 0x09, 0x20, 0x5c, 0xef, 0x77, 0x06, 0x17, 0x10, 0xda, 0xbc, 0x38, 0xf7, 0x6d,
	0x4d, 0xf1, 0xf3, 0xb3, 0x46, 0xdf, 0x03, 0x7c, 0x01, 0xb6, 0x1d, 0x1b, 0x3c, 0xc3, 0x39, 0x7a,
	0xe5, 0x13, 0xe0, 0x0a, 0x52, 0x37, 0x99, 0x8f, 0xd6, 0x1c, 0x48, 0xe2, 0xad, 0x2f, 0x39, 0x4d,
	0x33, 0xff, 0x8f, 0xb4, 0x6a, 0x22, 0xf7, 0x0f, 0xab, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x76,
	0x3f, 0xd1, 0x36, 0x9d, 0x01, 0x00, 0x00,
}
